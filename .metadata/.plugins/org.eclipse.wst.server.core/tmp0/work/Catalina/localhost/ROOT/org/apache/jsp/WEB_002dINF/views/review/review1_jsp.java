/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.69
 * Generated at: 2023-01-19 15:27:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.review;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class review1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/for%20studying/spring_workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/project_test0119/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1668700713831L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("<head>\n");
      out.write("<meta charset=\"utf-8\" />\n");
      out.write("<title>Jimat - Food choice for you</title>\n");
      out.write("\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/review.css\" type=\"text/css\"\n");
      out.write("	rel=\"stylesheet\" />\n");
      out.write("\n");
      out.write("<link\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\"\n");
      out.write("	rel=\"stylesheet\"\n");
      out.write("	integrity=\"sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD\"\n");
      out.write("	crossorigin=\"anonymous\" />\n");
      out.write("<script src=\"https://kit.fontawesome.com/edd4d6d779.js\"\n");
      out.write("	crossorigin=\"anonymous\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<div class=\"card p-3 container ms-2 mt-2\" id=\"comment-body\">\n");
      out.write("		<div class=\"comment-box-body col-11 column-row p-2\">\n");
      out.write("			<div class=\"comment-box column-row mb-4 column-row\">\n");
      out.write("				<div class=\"row\" id=\"row1\">\n");
      out.write("					<div class=\"comment-rating d-flex justify-content-between p-0\">\n");
      out.write("						<div class=\"title m-0 mt-2 pt-1\">\n");
      out.write("							<h4>리뷰 작성하기</h4>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"rating flex-row-reverse ms-3 pt-2\" id=\"write-rating\">\n");
      out.write("							<input type=\"radio\" name=\"rating\" value=\"1\" id=\"1\" /> <label\n");
      out.write("								id=\"stars\" for=\"1\">☆</label> <input type=\"radio\" name=\"rating\"\n");
      out.write("								value=\"2\" id=\"2\" /> <label id=\"stars\" for=\"2\">☆</label> <input\n");
      out.write("								type=\"radio\" name=\"rating\" value=\"3\" id=\"3\" /> <label\n");
      out.write("								id=\"stars\" for=\"3\">☆</label> <input type=\"radio\" name=\"rating\"\n");
      out.write("								value=\"4\" id=\"4\" /> <label id=\"stars\" for=\"4\">☆</label> <input\n");
      out.write("								type=\"radio\" name=\"rating\" value=\"5\" id=\"5\" /> <label\n");
      out.write("								id=\"stars\" for=\"5\">☆</label>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"comment-tag\">\n");
      out.write("							<div class=\"btn mt-0\">\n");
      out.write("								<input type=\"checkbox\" class=\"btn-check\" name=\"btnradio\"\n");
      out.write("									id=\"taste\" autocomplete=\"off\" /> <label\n");
      out.write("									class=\"btn btn-outline-danger\" for=\"taste\">#맛 </label> <input\n");
      out.write("									type=\"checkbox\" class=\"btn-check\" name=\"btnradio\" id=\"price\"\n");
      out.write("									autocomplete=\"off\" /> <label\n");
      out.write("									class=\"btn btn-outline-warning\" for=\"price\">#가격</label> <input\n");
      out.write("									type=\"checkbox\" class=\"btn-check\" name=\"btnradio\" id=\"service\"\n");
      out.write("									autocomplete=\"off\" /> <label\n");
      out.write("									class=\"btn btn-outline-info\" for=\"service\">#서비스</label>\n");
      out.write("								<input type=\"checkbox\" class=\"btn-check\" name=\"btnradio\"\n");
      out.write("									id=\"mood\" autocomplete=\"off\" /> <label\n");
      out.write("									class=\"btn btn-outline-primary\" for=\"mood\">#분위기</label>\n");
      out.write("								<input type=\"checkbox\" class=\"btn-check\" name=\"btnradio\"\n");
      out.write("									id=\"parking\" autocomplete=\"off\" /> <label\n");
      out.write("									class=\"btn btn-outline-success\" for=\"parking\">#주차</label>\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"row\" id=\"row2\">\n");
      out.write("				<div class=\"comment-area p-0\">\n");
      out.write("					<textarea class=\"form-control\" placeholder=\"리뷰를 입력해주세요\" rows=\"3\"></textarea>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"row\" id=\"row3\">\n");
      out.write("				<div class=\"write-buttons mt-3 d-flex justify-content-center\">\n");
      out.write("					<input class=\"form-control\" type=\"file\" id=\"formFile\">\n");
      out.write("					<button type=\"button\" class=\"btn btn-primary\" id=\"comment-send\">작성완료</button>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("\n");
      out.write("		<div class=\"card p-3 justify-content-start mt-2\">\n");
      out.write("			<div class=\"row\">\n");
      out.write("				<div class=\"card-title\">\n");
      out.write("					<h4>방문자 리뷰</h4>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"row\">\n");
      out.write("				<div class=\"profile-body container\">\n");
      out.write("					<div class=\"comment-widgets d-flex m-b-20\">\n");
      out.write("						<div class=\"profile column-row mt-3 ms-2\">\n");
      out.write("							<div class=\"profile-image\">\n");
      out.write("								<span class=\"round\"> <img\n");
      out.write("									src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/test-images/profile1.png\"\n");
      out.write("									alt=\"user\" width=\"80\" id=\"user_profile_image\" />\n");
      out.write("								</span>\n");
      out.write("							</div>\n");
      out.write("							<div class=\"comment-options mt-3 d-flex justify-content-center\">\n");
      out.write("								<div class=\"action-icons\">\n");
      out.write("									<a href=\"#\" data-abc=\"true\" id=\"edit\"><i\n");
      out.write("										class=\"fa fa-pencil fa-lg\" id=\"edit\" alt=\"ìì \"></i></a>\n");
      out.write("								</div>\n");
      out.write("\n");
      out.write("								<div class=\"bookmark\">\n");
      out.write("									<input type=\"checkbox\" class=\"btn-check\" id=\"review-bookmark\"\n");
      out.write("										autocomplete=\"off\" /> <label\n");
      out.write("										class=\"btn btn-bookmark\" for=\"review-bookmark\"><i\n");
      out.write("										class=\"fa-solid fa-heart fa-lg\"> </i> </label>\n");
      out.write("								</div>\n");
      out.write("\n");
      out.write("								<p class=\"ms-1\">5</p>\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"comment-inside pt-3 col-2\">\n");
      out.write("							<div class=\"comment-info column-row\">\n");
      out.write("								<div class=\"user_info\" id=\"user_nickname\">\n");
      out.write("									<span><h4>작성자 이름</h4></span>\n");
      out.write("								</div>\n");
      out.write("								<div class=\"user-rating d-flex\" id=\"user-stars\">\n");
      out.write("									<div class=\"rating flex-row-reverse\" id=\"review-rating\">\n");
      out.write("										<input type=\"radio\" name=\"rating\" value=\"1\" id=\"1\" /> <label\n");
      out.write("											id=\"stars\" for=\"1\">☆</label> <input type=\"radio\"\n");
      out.write("											name=\"rating\" value=\"2\" id=\"2\" /> <label id=\"stars\" for=\"2\">☆</label>\n");
      out.write("										<input type=\"radio\" name=\"rating\" value=\"3\" id=\"3\" /> <label\n");
      out.write("											id=\"stars\" for=\"3\">☆</label> <input type=\"radio\"\n");
      out.write("											name=\"rating\" value=\"4\" id=\"4\" /> <label id=\"stars\" for=\"4\">☆</label>\n");
      out.write("										<input type=\"radio\" name=\"rating\" value=\"5\" id=\"5\" /> <label\n");
      out.write("											id=\"stars\" for=\"5\">☆</label>\n");
      out.write("									</div>\n");
      out.write("								</div>\n");
      out.write("								<div class=\"write_date\">\n");
      out.write("									<span class=\"date\" id=\"date\">April 14, 2019</span>\n");
      out.write("								</div>\n");
      out.write("								<div class=\"comment-tag mt-1 container\">\n");
      out.write("									<button type=\"button\" class=\"btn btn-danger\">맛</button>\n");
      out.write("									<button type=\"button\" class=\"btn btn-warning\">가격</button>\n");
      out.write("								</div>\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"comment-text mt-3\">\n");
      out.write("							<p id=\"comment-text\">Lorem Ipsum is simply dummy text of the\n");
      out.write("								printing and typesetting industry. Lorem Ipsum has been the\n");
      out.write("								industry's standard dummy text ever since the 1500s, when an\n");
      out.write("								unknown printer took a galley of type and scrambled it</p>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"row\">\n");
      out.write("						<div class=\"container d-flex p-3\">\n");
      out.write("							<div class=\"row\">\n");
      out.write("								<div class=\"review-images col-3\">\n");
      out.write("\n");
      out.write("									<img\n");
      out.write("										src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/test-images/review_images1.jpg\" />\n");
      out.write("								</div>\n");
      out.write("								<div class=\"review-images col-3\">\n");
      out.write("									<img\n");
      out.write("										src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/test-images/review_images2.jpg\" />\n");
      out.write("								</div>\n");
      out.write("								<div class=\"review-images col-3\">\n");
      out.write("									<img\n");
      out.write("										src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/test-images/review_images3.jpg\" />\n");
      out.write("								</div>\n");
      out.write("								<div class=\"review-images col-3\">\n");
      out.write("									<img\n");
      out.write("										src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/test-images/review_images4.jpg\" />\n");
      out.write("								</div>\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/review/review1.jsp(4,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("path");
      // /WEB-INF/views/review/review1.jsp(4,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/review/review1.jsp(4,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }
}
